components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        phone:
          type: string
        name:
          type: string
        role:
          type: string
          enum: [user, admin]
        birth:
          type: string
        province:
          type: string
        district:
          type: string
        commune:
          type: string
        address:
          type: string
        class:
          type: string
        gender:
          type: string
        email:
          type: string
      example:
        id: 5ebac534954b54139806c112
        email: fake@example.com
        name: fake name
        role: user
        phone: 012345678
        birth: ngaysinhtheostring
        province: NA
        district: NA
        commune: NA
        address: NA
        class: Lop 1
        gender: MALE

    Token:
      type: object
      properties:
        token:
          type: string
        expires:
          type: string
          format: date-time
      example:
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg
        expires: 2020-05-12T16:18:04.793Z
      
    Block:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        order:
          type: number

    Class:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        order:
          type: number
        blockId:
          type: string

    Lecture:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        classId:
          type: string
        thumbnail:
          type: string


    Lesson:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        order:
          type: string
        url:
          type: string
        description:
          type: string

    Exercise:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        lessonId:
          type: string
        url:
          type: string
        description:
          type: string
    
    News:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        thumbnail:
          type: string
        content:
          type: string

    QuestionExam:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        multiChoices:
          type: array
          items:
            type: string
        description:
          type: string
        order:
          type: number
        answer:
          type: string

    UserRequest:
      type: object
      properties:
        id:
          type: string
        phone:
          type: string
        birth:
          type: string
        address:
          type: string
        class:
          type: string
        supportDesc:
          type: string

    AuthTokens:
      type: object
      properties:
        access:
          $ref: '#/components/schemas/Token'
        refresh:
          $ref: '#/components/schemas/Token'

    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string

  responses:
    DuplicatePhone:
      description: Phone already taken
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Phone already taken
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 401
            message: Please authenticate
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 403
            message: Forbidden
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 404
            message: Not found

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
